/*
Practice Question 

Basic Aggregate Functions: 

Question 1: 
Retrieve the total number of rentals made in the Sakila database. 
Hint: Use the COUNT() function. */

select count(rental_id) cntrental from rental;


/*Question 2: 
Find the average rental duration (in days) of movies rented from the Sakila database.
Hint: Utilize the AVG() function. */
SELECT title movies,avg(rental_duration) rental_duration
FROM film
group by title;


/*
String Functions: 

Question 3: 
Display the first name and last name of customers in uppercase. 
Hint: Use the UPPER () function. */

Select upper (First_name) First_name,Upper(last_name)  last_name from customer;


/*Question 4: 
Extract the month from the rental date and display it alongside the rental ID. 
Hint: Employ the MONTH() function. */

select rental_id,month(rental_date) month from rental;

/*
GROUP BY:


Question 5: 
Retrieve the count of rentals for each customer (display customer ID and the count of rentals). 
Hint: Use COUNT () in conjunction with GROUP BY. */


SELECT c.customer_id, COUNT(r.rental_id) AS rental_count
FROM customer c
inner JOIN rental r ON c.customer_id = r.customer_id
GROUP BY c.customer_id;

/*Question 6: 
Find the total revenue generated by each store. 
Hint: Combine SUM() and GROUP BY. */

SELECT  s.store_id,SUM(p.amount) AS total_revenue FROM  payment p
inner join  rental r ON p.rental_id = r.rental_id
inner join  inventory i ON r.inventory_id = i.inventory_id
inner join   store s ON i.store_id = s.store_id
GROUP BY   s.store_id;

/*Joins:

Display the title of the movie, customer s first name, and last name who rented it. 
Hint: Use JOIN between the film, inventory, rental, and customer tables. 
*/

select f.title movie,c.first_name,c.last_name from film f 
inner join inventory i on f.film_id =  i.film_id
inner join rental r on i.inventory_id = r.inventory_id
inner join customer c on r.customer_id = c.customer_id;


/*
Joins:

Advanced Joins and GROUP BY: 

Mastering full stack data analytics

Assignment Questions

Question 8: 
Retrieve the names of all actors who have appeared in the film "Gone with the Wind." 
Hint: Use JOIN between the film actor, film, and actor tables. */

select a.first_name,m.title from actor a 
inner join film_actor f on a.actor_id = f.actor_id
inner join film m on f.film_id = m.film_id 
where title = 'Gone with the Wind.';



/*Question 1: 
Determine the total number of rentals for each category of movies. 
Hint: JOIN film_category, film, and rental tables, then use cOUNT () and GROUP BY. 
*/
SELECT fc.category_id, COUNT(r.rental_id) AS total_rentals
FROM film_category fc
JOIN  film f ON fc.film_id = f.film_id
JOIN inventory i ON f.film_id = i.film_id
JOIN rental r ON i.inventory_id = r.inventory_id
GROUP BY fc.category_id;

/*Question 2: 
Find the average rental rate of movies in each language. 
Hint: JOIN film and language tables, then use AVG () and GROUP BY. 
*/

select avg(rental_rate) rental_rate,l.name language from film f 
inner join  language l on f.language_id = l.language_id
group by l.name;

/*Question 3: 
Retrieve the customer names along with the total amount they've spent on rentals. 
Hint: JOIN customer, payment, and rental tables, then use SUM() and GROUP BY. */

select c.first_name ,sum(p.amount) amount from customer c
inner join payment p on p.customer_id = c.customer_id
inner join rental r on r.rental_id = p.rental_id
group by c.first_name ;

/*Question 4: 
List the titles of movies rented by each customer in a particular city (e.g., 'London'). 
Hint: JOIN customer, address, city, rental, inventory, and film tables, then use GROUP BY. 
*/
select f.title,c.first_name,cc.city
from customer c 
inner join rental r on r.customer_id= c.customer_id
inner join inventory i on  r.inventory_id = i.inventory_id
inner join film f on i.film_id = f.film_id
inner join address a on c.address_id = a.address_id
inner join city cc on a.city_id = cc.city_id
and cc.city = 'London'
group by f.title,c.first_name,cc.city;
/*
Advanced Joins and GROUP BY: 

Question 5: 
Display the top 5 rented movies along with the number of times they've been rented. 
Hint: JOIN film, inventory, and rental tables, then use cOUNT() and GROUP BY, and limit the results. 
*/
select f.title movie ,count(r.rental_id) rental from film f
inner join inventory i on i.film_id = f.film_id
inner join rental r on r.inventory_id = i.inventory_id 
group by f.title
limit 5; 

/*
Question 6: 
Determine the customers who have rented movies from both stores (store ID 1 and store ID 2). 
Hint: Use JOINS with rental, inventory, and customer tables and consider COUNT() and GROUP BY. */
select c.first_name , c.store_id store from customer c
inner join rental r on r.customer_id = c.customer_id
inner join inventory i on r.inventory_id = i.inventory_id 
inner join film f on  i.film_id = f.film_id
where c.store_id in (1,2)
group by c.first_name, c.store_id;

